// Generated by data binding compiler. Do not edit!
package com.team.fantasy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.team.fantasy.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class AdapterPlayerListBinding extends ViewDataBinding {
  @NonNull
  public final RelativeLayout RLCredit;

  @NonNull
  public final RelativeLayout RLName;

  @NonNull
  public final RelativeLayout RLPlayerListMain;

  @NonNull
  public final ImageView imAddPlayer;

  @NonNull
  public final CircleImageView imPlayerImage;

  @NonNull
  public final TextView tvPlayerCredit;

  @NonNull
  public final TextView tvPlayerName;

  @NonNull
  public final TextView tvPlayerTeamName;

  @NonNull
  public final TextView tvPlayingStatus;

  @NonNull
  public final TextView tvTeamNumber;

  protected AdapterPlayerListBinding(Object _bindingComponent, View _root, int _localFieldCount,
      RelativeLayout RLCredit, RelativeLayout RLName, RelativeLayout RLPlayerListMain,
      ImageView imAddPlayer, CircleImageView imPlayerImage, TextView tvPlayerCredit,
      TextView tvPlayerName, TextView tvPlayerTeamName, TextView tvPlayingStatus,
      TextView tvTeamNumber) {
    super(_bindingComponent, _root, _localFieldCount);
    this.RLCredit = RLCredit;
    this.RLName = RLName;
    this.RLPlayerListMain = RLPlayerListMain;
    this.imAddPlayer = imAddPlayer;
    this.imPlayerImage = imPlayerImage;
    this.tvPlayerCredit = tvPlayerCredit;
    this.tvPlayerName = tvPlayerName;
    this.tvPlayerTeamName = tvPlayerTeamName;
    this.tvPlayingStatus = tvPlayingStatus;
    this.tvTeamNumber = tvTeamNumber;
  }

  @NonNull
  public static AdapterPlayerListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.adapter_player_list, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static AdapterPlayerListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<AdapterPlayerListBinding>inflateInternal(inflater, R.layout.adapter_player_list, root, attachToRoot, component);
  }

  @NonNull
  public static AdapterPlayerListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.adapter_player_list, null, false, component)
   */
  @NonNull
  @Deprecated
  public static AdapterPlayerListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<AdapterPlayerListBinding>inflateInternal(inflater, R.layout.adapter_player_list, null, false, component);
  }

  public static AdapterPlayerListBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static AdapterPlayerListBinding bind(@NonNull View view, @Nullable Object component) {
    return (AdapterPlayerListBinding)bind(component, view, R.layout.adapter_player_list);
  }
}
