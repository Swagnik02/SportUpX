// Generated by data binding compiler. Do not edit!
package com.team.fantasy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.team.fantasy.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DialogGroundViewBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout LLGroundAR;

  @NonNull
  public final LinearLayout LLGroundBAT;

  @NonNull
  public final LinearLayout LLGroundBOWL;

  @NonNull
  public final LinearLayout LLGroundWK;

  @NonNull
  public final ImageView imCloseIcon;

  @NonNull
  public final TextView tvall;

  @NonNull
  public final TextView tvbt;

  @NonNull
  public final TextView tvbw;

  @NonNull
  public final TextView tvwk;

  protected DialogGroundViewBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout LLGroundAR, LinearLayout LLGroundBAT, LinearLayout LLGroundBOWL,
      LinearLayout LLGroundWK, ImageView imCloseIcon, TextView tvall, TextView tvbt, TextView tvbw,
      TextView tvwk) {
    super(_bindingComponent, _root, _localFieldCount);
    this.LLGroundAR = LLGroundAR;
    this.LLGroundBAT = LLGroundBAT;
    this.LLGroundBOWL = LLGroundBOWL;
    this.LLGroundWK = LLGroundWK;
    this.imCloseIcon = imCloseIcon;
    this.tvall = tvall;
    this.tvbt = tvbt;
    this.tvbw = tvbw;
    this.tvwk = tvwk;
  }

  @NonNull
  public static DialogGroundViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_ground_view, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DialogGroundViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DialogGroundViewBinding>inflateInternal(inflater, R.layout.dialog_ground_view, root, attachToRoot, component);
  }

  @NonNull
  public static DialogGroundViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_ground_view, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DialogGroundViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DialogGroundViewBinding>inflateInternal(inflater, R.layout.dialog_ground_view, null, false, component);
  }

  public static DialogGroundViewBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DialogGroundViewBinding bind(@NonNull View view, @Nullable Object component) {
    return (DialogGroundViewBinding)bind(component, view, R.layout.dialog_ground_view);
  }
}
